SFU:
In:          0.000000e+00 1.000000e+00 2.000000e+00 3.141593e+00 2.718282e+00 1.000000e+02 1.000000e+03 1.000000e+05 5.000000e-01 2.500000e-01 1.250000e-01 -1.000000e+00 -2.000000e+00 -5.000000e-01 -1.000000e+05 -3.141593e+00

ULP:         0.000000e+00 -1.192093e-07 1.192093e-07 2.384186e-07 2.384186e-07 7.629395e-06 -6.103516e-05 -1.455192e-11 2.980232e-08 1.490116e-08 7.450581e-09 -5.960464e-08 -1.192093e-07 -2.980232e-08 -7.812500e-03 -2.384186e-07
recip/recip: 0.000000e+00 1.000000e+00 2.000183e+00 3.141602e+00 2.718323e+00 1.000039e+02 9.999844e+02 1.000000e+05 5.000458e-01 2.500229e-01 1.250114e-01 -1.000000e+00 -2.000183e+00 -5.000458e-01 -1.000000e+05 -3.141602e+00
Host:        0.000000e+00 1.000000e+00 2.000000e+00 3.141593e+00 2.718282e+00 1.000000e+02 9.999999e+02 1.000000e+05 5.000000e-01 2.500000e-01 1.250000e-01 -1.000000e+00 -2.000000e+00 -5.000000e-01 -1.000000e+05 -3.141593e+00
Min accuracy (binary digits): 10 
exp/log:     0.000000e+00 1.000031e+00 2.000061e+00 3.141541e+00 2.718262e+00 1.000020e+02 9.999531e+02 9.999600e+04 5.000153e-01 2.500076e-01 1.250038e-01 1.000031e+00 2.000061e+00 5.000153e-01 9.999600e+04 3.141541e+00
Host:        0.000000e+00 1.000000e+00 2.000000e+00 3.141593e+00 2.718282e+00 1.000000e+02 1.000000e+03 9.999997e+04 5.000000e-01 2.500000e-01 1.250000e-01 nan nan nan nan nan
Min accuracy (binary digits): 5
recip/rsqrt: 0.000000e+00 1.000183e+00 2.000263e+00 3.141401e+00 2.718352e+00 1.000000e+02 9.999553e+02 9.999923e+04 5.000658e-01 2.500458e-01 1.250165e-01 1.000183e+00 2.000263e+00 5.000658e-01 9.999923e+04 3.141401e+00
Host:        0.000000e+00 1.000000e+00 2.000000e+00 3.141593e+00 2.718282e+00 1.000000e+02 9.999998e+02 9.999999e+04 5.000000e-01 2.500000e-01 1.250000e-01 nan nan nan nan nan
Min accuracy (binary digits): 12
exp:         1.000031e+00 2.000061e+00 4.000122e+00 8.825195e+00 6.581055e+00 1.267689e+30          inf          inf 1.414246e+00 1.189240e+00 1.090546e+00 4.999847e-01 2.499924e-01 7.071075e-01 0.000000e+00 1.133175e-01
Host:        1.000000e+00 2.000000e+00 4.000000e+00 8.824978e+00 6.580886e+00 1.267651e+30          inf          inf 1.414214e+00 1.189207e+00 1.090508e+00 5.000000e-01 2.500000e-01 7.071068e-01 0.000000e+00 1.133147e-01
Min accuracy (binary digits): 11
log:                 -inf 0.000000e+00 1.000000e+00 1.651428e+00 1.442627e+00 6.643829e+00 9.965729e+00 1.660959e+01 -9.999847e-01 -1.999985e+00 -2.999985e+00 0.000000e+00 1.000000e+00 -9.999847e-01 1.660959e+01 1.651428e+00
Host:                -inf 0.000000e+00 1.000000e+00 1.651496e+00 1.442695e+00 6.643856e+00 9.965784e+00 1.660964e+01 -1.000000e+00 -2.000000e+00 -3.000000e+00 nan nan nan nan nan
Min accuracy (binary digits): 12


-> EXP is 2^x !!!
-> log is log2(x) !!!

-> Test results with float on host!
-> Too inaccurate!!
-> Use for native_xxx, not for "normal" versions


TODO:
- Append to test-program:
for(int i = 0; i < num; ++i)
{
	int tmp = ((int*)host)[i] ^ ((int*)gpu)[i];
	std::cout << (tmp == 0 ? 23 : __builtin_clz(tmp) - 9) << endl;
}
-Test single SF-call, not exp(log(x)), recip(recip(x))
