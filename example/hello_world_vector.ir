; ModuleID = './hello_world_vector.cl'
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"
target triple = "i386-unknown-linux-gnu"

; Function Attrs: nounwind
define void @hello_world(<16 x i8>* nocapture readonly %in, <16 x i8>* nocapture %out) #0 {
  %1 = tail call i32 @get_global_id(i32 0) #2
  %2 = getelementptr inbounds <16 x i8>, <16 x i8>* %in, i32 %1
  %3 = load <16 x i8>, <16 x i8>* %2, align 16, !tbaa !8
  %4 = getelementptr inbounds <16 x i8>, <16 x i8>* %out, i32 %1
  store <16 x i8> %3, <16 x i8>* %4, align 16, !tbaa !8
  ret void
}

declare i32 @get_global_id(i32) #1

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!opencl.kernels = !{!0}
!llvm.ident = !{!7}

!0 = !{void (<16 x i8>*, <16 x i8>*)* @hello_world, !1, !2, !3, !4, !5, !6}
!1 = !{!"kernel_arg_addr_space", i32 0, i32 0}
!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
!3 = !{!"kernel_arg_type", !"char16*", !"char16*"}
!4 = !{!"kernel_arg_base_type", !"char __attribute__((ext_vector_type(16)))*", !"char __attribute__((ext_vector_type(16)))*"}
!5 = !{!"kernel_arg_type_qual", !"const", !""}
!6 = !{!"reqd_work_group_size", i32 1, i32 1, i32 1}
!7 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!8 = !{!9, !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C/C++ TBAA"}
